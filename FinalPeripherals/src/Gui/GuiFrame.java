/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gui;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author hp
 */
public class GuiFrame extends javax.swing.JFrame {

    /**
     * Creates new form GuiFrame
     */
    public GuiFrame() {
        initComponents();
        //initialize components
        init();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_list = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        f_name = new javax.swing.JTextField();
        f_peripherals = new javax.swing.JTextField();
        f_number = new javax.swing.JTextField();
        f_io = new javax.swing.JTextField();
        f_avail = new javax.swing.JTextField();
        btn_edit = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        btn_print1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventory System Menu");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INVENTORY PERIPHERAL SYSTEM MENU");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        Table_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee", "Peripherals", "Availabilty", "Number of Peripherals", "Input.Output"
            }
        ));
        Table_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_list);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details...", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ebrima", 1, 12))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel3.setText("Assigned Employee:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel5.setText("Peripherals:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel6.setText("Availability:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel7.setText("Number of Peripherals:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        jLabel8.setText("Input/Output:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        f_name.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(f_name, gridBagConstraints);

        f_peripherals.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(f_peripherals, gridBagConstraints);

        f_number.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(f_number, gridBagConstraints);

        f_io.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(f_io, gridBagConstraints);

        f_avail.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(1, 11, 1, 0);
        jPanel1.add(f_avail, gridBagConstraints);

        btn_edit.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btn_edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/edit_48px.png"))); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_save.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/save_16px.png"))); // NOI18N
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_refresh.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/available_updates_16px.png"))); // NOI18N
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/delete_24px.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_print.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/print_40px.png"))); // NOI18N
        btn_print.setText("Print");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        btn_print1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        btn_print1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Asset/cancel_16px.png"))); // NOI18N
        btn_print1.setText("Exit");
        btn_print1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_print1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_print1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_print1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btn_print))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) Table_list.getModel();
        //set data to textfield when row is selected
        
        String tblName = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 0).toString();
        String tblPeripherals = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 1).toString();
        String tblAvail = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 2).toString();
        String tblNumber= (String) tblModel.getValueAt(Table_list.getSelectedRow(), 3).toString();
        String tblIO = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 4).toString();
        
        //set textfield
        f_name.setText(tblName);
        f_peripherals.setText(tblPeripherals);
        f_avail.setText(tblAvail);
        f_number.setText(tblNumber);
        f_io.setText(tblIO);
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
         if(f_name.getText().equals("")||f_peripherals.getText().equals("")||f_avail.getText().equals("")||f_number.getText().equals("")||f_io.getText().equals("")){
            //if any of four field left blank then show message
            JOptionPane.showMessageDialog(this, "Please Enter All Data !");
            }else{
            //if all data field than...
            //store enter data into String array --data---
            String data[] = {f_name.getText(), f_peripherals.getText(), f_avail.getText(),f_number.getText(), f_io.getText()};
            
            DefaultTableModel tblModel = (DefaultTableModel)Table_list.getModel();
            //add string array data

            tblModel.addRow(data); //row added
            //successfully added message
            
            JOptionPane.showMessageDialog(this, "Data Successfully Added !");
            //clear textfield for new entry...
            f_name.setText("");
            f_peripherals.setText("");
            f_avail.setText("");
            f_number.setText("");
            f_io.setText("");
            
        }//end
              
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        // TODO add your handling code here:
           DefaultTableModel tblModel = (DefaultTableModel) Table_list.getModel();
       if(Table_list.getSelectedRowCount() == 1) {
           //single row is selected than update
           
           String name = f_name.getText();
           String peripherals = f_peripherals.getText();
            String avail = f_avail.getText();
           String number = f_number.getText();
           String input = f_io.getText();
           
           //set updated value to the row table
           tblModel.setValueAt(name, Table_list.getSelectedRow(), 0);
           tblModel.setValueAt(peripherals, Table_list.getSelectedRow(), 1);
           tblModel.setValueAt(avail, Table_list.getSelectedRow(), 2);
           tblModel.setValueAt(number, Table_list.getSelectedRow(), 3);
           tblModel.setValueAt(f_io, Table_list.getSelectedRow(), 4);
           
           //update message display
           JOptionPane.showMessageDialog(this, "Successfully Update");
 
       }else{
           if(Table_list.getRowCount()==0) {
               //if table is empty
               JOptionPane.showMessageDialog(this, "Table is Empty..");
               
           }else{
               //row is not selected multiple row is selected than
               JOptionPane.showMessageDialog(this, "Please Select a Single Row for Update .. ");
               
           }
       } 
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        
         //first get the Table_list
        DefaultTableModel tblModel = (DefaultTableModel) Table_list.getModel();
        
        //row delete
       if(Table_list.getSelectedRowCount()==1) {
            //if single row is selected than delete
            tblModel.removeRow(Table_list.getSelectedRow());
            
            //if table is empty no data display message
       }else{
           
           if(Table_list.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Empty Table");
 
       }else{
            //table is not empty but row is not selected or multiple row selected
            JOptionPane.showMessageDialog(this, "Please select single row to delete");
        
        }//end
       }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void Table_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_listMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) Table_list.getModel();
        //set data to textfield when row is selected
        
        String tblName = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 0).toString();
        String tblPeripherals = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 1).toString();
        String tblAvail = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 2).toString();
        String tblNumber= (String) tblModel.getValueAt(Table_list.getSelectedRow(), 3).toString();
        String tblIO = (String) tblModel.getValueAt(Table_list.getSelectedRow(), 4).toString();
        
        //set textfield
        f_name.setText(tblName);
        f_peripherals.setText(tblPeripherals);
        f_avail.setText(tblAvail);
        f_number.setText(tblNumber);
        f_io.setText(tblIO);
        
    }//GEN-LAST:event_Table_listMouseClicked

    
    
    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_print1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_print1ActionPerformed
        // TODO add your handling code here:
        //for exit BTN
        dispose();
    }//GEN-LAST:event_btn_print1ActionPerformed
/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_list;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_print1;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_save;
    private javax.swing.JTextField f_avail;
    private javax.swing.JTextField f_io;
    private javax.swing.JTextField f_name;
    private javax.swing.JTextField f_number;
    private javax.swing.JTextField f_peripherals;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

   //initialize components

    private void init() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        centerFrame();
        tableHeader();
        
      
    }     
        //center frame in center
        
        private void centerFrame(){
            Dimension dim =Toolkit.getDefaultToolkit().getScreenSize();
            Rectangle rec= this.getBounds();
           // setLocation((dim.height - rec.height)/2, dim.width - rec.width)/2);
            
    }//end
        
        
        //Default table model
        
        DefaultTableModel model = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
            
        }
        };
                
        //create table header
         private void tableHeader() {
             
        JTable Table_List = new JTable(model);
        //Creating Column Header
        String[] dataHeader ={"#","NAME", "PERIPHERALS", "AVAILABILITY", "NUMBERS", "INPUT/OUTPUT"};
          setTableHeader (dataHeader, model);
          
          //Set row Height
          Table_List.setRowHeight(30);
          
          TableColumn hidden = Table_List.getColumnModel().getColumn(1);
          
          //hidden proper order
          
          hidden.setMinWidth(0);
          hidden.setPreferredWidth(0);
          hidden.setMaxWidth(0);
          //creating custom size
          String keySize[] ={"0:50", "2:180", "3:100", "4:100", "5:100", "6:100"};
          
                     
       
    }//end
         //Setting table header
         private void setTableHeader(String[] data, DefaultTableModel _model){//start
             
             for (String datel :data){
                 _model.addColumn(datel);
                 
             }
             
         }//end
         
         //Setting keysize in call
         private void keySizeCell(String [] lenght){
             for (String lengthl : lenght){
                 //
                  String[] newString = lengthl.split(":");
                  int col = Integer.parseInt(newString[0]);//index val
                  int size = Integer.parseInt(newString[1]);//index value
                  
                  
                  
             }
         }//end
        
     
   
}


//}//end class
